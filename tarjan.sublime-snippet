<snippet>
	<content><![CDATA[
struct SCC {
	int N, ti = 0; vector<vi> adj;
	vi disc, comp, st, comps;
	void init(int _N) { N = _N; adj.resize(N), disc.resize(N), comp = vi(N,-1); }
	void ae(int x, int y) { adj[x].pb(y); }
	int dfs(int x) {
		int low = disc[x] = ++ti; st.pb(x); // disc[y] != 0 -> in stack
		for(auto y : adj[x]) if (comp[y] == -1) amin(low,disc[y]?:dfs(y)); 
		if (low == disc[x]) { // make new SCC, pop off stack until you find x
			comps.pb(x); for (int y = -1; y != x;) 
				comp[y = st.back()] = x, st.pop_back();
		}
		return low;
	}
	void gen() {
		for(int i = 0; i < N; ++i) if (!disc[i]) dfs(i);
		reverse(all(comps));
	}
}tarjan;
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>TARJAN</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
